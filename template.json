{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sparkClusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Spark cluster to create. This must be a unique name."
      }
    },
    "kafkaClusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Kafka cluster to create. This must be a unique name."
      }
    },
    "clusterLoginUserName": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "These credentials can be used to submit jobs to the clusters and to log into clusters dashboards."
      }
    },
    "clusterLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "sshUserName": {
      "type": "string",
      "defaultValue": "sshuser",
      "metadata": {
        "description": "These credentials can be used to remotely access the clusters."
      }
    },
    "sshPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
     "blobstoreName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Blob account to be created to hold initial files."
      }
    },
    "sqlAdminLogin": {
      "type": "string",
      "defaultValue": "sqluser",
      "metadata": {
        "description": "These credentials can be used to access the Azure SQL database."
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "defaultValue": "password123",
      "metadata": {
        "description": "The password can be used to access the SQL database."
      }
    }
  },
  "variables": {
    "blobStorageAccount": {
      "name": "[parameters('blobstoreName')]",
      "type": "Standad_LRS"
    },
    "ADLSGen2StorageName": "[concat('adlsgen2', uniqueString(resourceGroup().id))]",
    "networkConfig": {
      "name": "[uniqueString(resourceGroup().id)]",
      "addressPrefix": "10.0.0.0/16"
    },
    "subnetConfig": {
      "name": "default",
      "addressPrefix": "10.0.0.0/24"
    },
      "sqlDatabase": {
      "serverName": "sqlforpredictions",
      "databaseName": "Predictions"
    },
    "managedIdentityName": "[concat(uniqueString(resourceGroup().id),'mi')]",
    "storageBlobOwner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
    "roleAssignmentName": "[concat(variables('ADLSGen2StorageName'), '/Microsoft.Authorization/',guid(resourceGroup().id))]",
    "roleName":"[guid(resourceGroup().id)]"
  },
  "resources": [
    {
  "name": "[variables('managedIdentityName')]",
  "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
  "apiVersion": "2018-11-30",
  "tags": {},
  "location": "[resourceGroup().location]"
  },
    {
      "name": "[variables('networkConfig').name]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-06-01",
      "dependsOn": [ ],
      "tags": { },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('networkConfig').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetConfig').name]",
            "properties": {
              "addressPrefix": "[variables('subnetConfig').addressPrefix]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('ADLSGen2StorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('managedIdentityName'))]"
      ],
      "apiVersion": "2019-06-01",
      "tags": {
        "displayName": "[variables('ADLSGen2StorageName')]"
      },
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "isHnsEnabled": true,
        "accessTier": "Hot",
        "networkAcls": {
          "bypass": "AzureServices"
        }
      },
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
          "name": "[variables('roleAssignmentName')]",
          "apiVersion": "2020-04-01-preview",
          "dependsOn": ["[resourceId('Microsoft.Storage/storageAccounts', variables('ADLSGen2StorageName'))]"],
          "properties":
          {
            "roleDefinitionId": "[variables('storageBlobOwner')]",
            "principalId": "[reference(variables('managedIdentityName'), '2018-11-30').principalId]",
            "principalType": "ServicePrincipal"
          }
          
        }
      ]
    },
    {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('ADLSGen2StorageName'), '/default/data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('ADLSGen2StorageName'))]"
            ],
            "properties": {
              "publicAccess": "Container"
            }
    },
     {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('ADLSGen2StorageName'), '/default/models')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('ADLSGen2StorageName'))]"
            ],
            "properties": {
              "publicAccess": "Container"
            }
    },
    {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('ADLSGen2StorageName'), '/default/predictions')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('ADLSGen2StorageName'))]"
            ],
            "properties": {
              "publicAccess": "Container"
            }
    },
   {
     "type": "Microsoft.Storage/storageAccounts",
     "apiVersion": "2019-06-01",
     "name":"[variables('blobStorageAccount').name]",
     "sku": {
       "name": "Standard_LRS",
       "tier": "Standard"
     },
     "kind": "StorageV2",
     "location":"[resourceGroup().location]"    
   },
    
    {
      "name": "[parameters('sparkClusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-06-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('ADLSGen2StorageName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('networkConfig').name)]",
        "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts',variables('ADLSGen2StorageName')),'Microsoft.Authorization/roleAssignments',variables('roleName'))]"
      ],
      "tags": { },
      "properties": {
        "clusterVersion": "4.0",
        "osType": "Linux",
        "clusterDefinition": {
          "kind": "spark",
          "componentVersion": {
            "Spark": "2.4"
          },
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name":"[concat(variables('ADLSGen2StorageName'), '.dfs.core.windows.net')]",
              "isDefault": true,
              "fileSystem": "[concat(parameters('sparkClusterName'), '-2019-01-23t20-00-14-186z')]",
              "resourceID": "[concat(resourceGroup().id, '/providers/Microsoft.Storage/storageAccounts/', variables('ADLSGen2StorageName'))]",
              "msiResourceId": "[concat(resourceGroup().id, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "Standard_D12_v2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name)]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name), '/subnets/', variables('subnetConfig').name)]"
              }
            },
            {
              "name": "workernode",
              "targetInstanceCount": 4,
              "hardwareProfile": {
                "vmSize": "Standard_D13_v2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name)]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name), '/subnets/', variables('subnetConfig').name)]"
              }
            }
          ]
        }
      },
         "identity":{  
             "type":"UserAssigned",
            "userAssignedIdentities": {
              "[concat(resourceGroup().id, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]": {

              }
            }
    }
    },
    {
      "name": "[parameters('kafkaClusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-03-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('ADLSGen2StorageName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('networkConfig').name)]"
      ],
      "tags": { },
      "properties": {
        "clusterVersion": "3.6",
        "osType": "Linux",
        "clusterDefinition": {
          "kind": "kafka",

          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[replace(replace(concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('ADLSGen2StorageName')), '2016-01-01').primaryEndpoints.blob),'https:',''),'/','')]",
              "isDefault": true,
              "fileSystem": "[concat(parameters('sparkClusterName'), '-2019-01-23t20-00-14-186z')]",
              "resourceID": "[concat(resourceGroup().id, '/providers/Microsoft.Storage/storageAccounts/', variables('ADLSGen2StorageName'))]",
              "msiResourceId": "[concat(resourceGroup().id, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "Standard_D12_v2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name)]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name), '/subnets/', variables('subnetConfig').name)]"
              }
            },
            {
              "name": "workernode",
              "targetInstanceCount": 3,
              "hardwareProfile": {
                "vmSize": "Standard_D13_v2"
              },
              "dataDisksGroups": [
                {
                  "disksPerNode": 2
                }
              ],
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name)]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name), '/subnets/', variables('subnetConfig').name)]"
              }
            },
            {
              "name": "zookeepernode",
              "targetInstanceCount": 3,
              "hardwareProfile": {
                "vmSize": "Standard_A2_v2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name)]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('networkConfig').name), '/subnets/', variables('subnetConfig').name)]"
              }
            }
          ]
        }
      }
    },
    {
        "name": "[variables('sqlDatabase').serverName]",
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2019-06-01-preview",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "[variables('sqlDatabase').serverName]"
        },
        "properties": {
            "administratorLogin": "[parameters('sqlAdminLogin')]",
            "administratorLoginPassword": "[parameters('sqlAdminPassword')]"
        },
        "resources": [
            {
                "type": "firewallRules",
                "apiVersion": "2015-05-01-preview",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers', variables('sqlDatabase').serverName)]"
                ],
                "location": "[resourceGroup().location]",
                "name": "AllowAllWindowsAzureIps",
                "properties": {
                    "startIpAddress": "0.0.0.0",
                    "endIpAddress": "0.0.0.0"
                }
            },
            {
              "type": "databases",
              "apiVersion": "2019-06-01-preview",
              "name":"[variables('sqlDatabase').databaseName]",
              "location":"[resourceGroup().location]",
              "sku": {
                "name": "Standard",
                "tier": "Standard"
              },
              "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlDatabase').serverName)]"],
              "properties": {
                "createMode": "Default"
              }
            }
        ]
    }
    
    
  ],
  "outputs": {
    "kafkaCluster": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.HDInsight/clusters',parameters('kafkaClusterName')))]"
    },
    "sparkCluster": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.HDInsight/clusters',parameters('sparkClusterName')))]"
    },
    "vnet": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks',variables('networkConfig').name))]"
    }
  }
}
